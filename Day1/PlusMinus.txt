import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'plusMinus' function below.
     *
     * The function accepts INTEGER_ARRAY arr as parameter.
     */

    public static void plusMinus(List<Integer> arr) {
    // Write your code here
        
        int [] completeArray = arr.stream().mapToInt(Integer::intValue).toArray();
        
     
        double sizeOfArray = (double)completeArray.length;
        double postiveCount = 0f;
        double negativeCount = 0f;
        double zeroCount = 0f;
        
        
        for (int i =0 ;i<sizeOfArray ;i++){
          
            if (completeArray[i]>0){
                postiveCount++ ; 
                  
            }else if(completeArray[i]<0){
                negativeCount++ ;
            }else {
                zeroCount++ ;
            }
        }
         DecimalFormat df= new DecimalFormat("#.00000");
         
         System.out.println(df.format( postiveCount/sizeOfArray));
         System.out.println(df.format( negativeCount/sizeOfArray));
         System.out.println(df.format( zeroCount/sizeOfArray));
    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));

        int n = Integer.parseInt(bufferedReader.readLine().trim());

        List<Integer> arr = Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
            .map(Integer::parseInt)
            .collect(toList());

        Result.plusMinus(arr);

        bufferedReader.close();
    }
}
